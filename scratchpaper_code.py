import pandas as pd
from Levenshtein import ratio, distance
from Bio import pairwise2, SeqIO
import consensus_maker as cm
import pipeline as p

pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', None)

'''
file = 'test/first_benchmark/seq_bin0.fq'
records = []
with open(file) as handle:
    for record in SeqIO.parse(handle, "fastq"):
        records.append(record[:1125])

with open('test/truncated_bin0.fq', "w") as centerFile:
    SeqIO.write(records, centerFile, "fastq")


#'''
'''
benchmark = pd.read_csv('test/first_benchmark/benchmark.csv').iloc[1: , :]
sequences = pd.read_csv('test/first_benchmark/benchmark_sequences.csv').iloc[1: , :]

print(benchmark)
print(sequences)
combos = []


for i in range(1,11):
    combos.extend(list(zip(benchmark.iloc[:,i],sequences.iloc[:,i])))

combos.sort()
data = [[combos[0][0],combos[0][1],-1]]
for i in range(len(combos)):
    lastSeq = combos[i-1][1]
    data.append([combos[i][0],combos[i][1],distance(lastSeq, combos[i][1])])

df = pd.DataFrame(data, columns = ['Distance from Consensus','Sequence','Distance from Previous Sequence'])
df.to_csv('test/first_benchmark/comprehensive.csv', index=False)

print(df.drop('Sequence', axis=1))

seq0 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCTCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCATAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGGGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAATGATTT'

print(len(seq0))

seq08 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACATTTC'

seq10 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCGTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACGTT'

seq14 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGGCAAGGGCGAGGAGCTGTTCACCCGGGGTGGTGCCCATCCTCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACATT'

seq67 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTTAAATTTCAAAAAAAAAAAAAAAATACACATCTCTACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'

seqOdd1 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCAGCGGCCGCATGGTGGCTGGGGCGAGGAGCTGTTCCGCAGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGCAGTACCACCTACAGCAAAGCTGACCCTGAGTTCATTTGCCACCGGCAAGCTGCCCGCAACCCACCCTCGTGATACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCGACCACATGAAGCGGCGGCTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAGCTTCGGGCCGCGCCGAGGTGAAGTTCGAGGCGACACCCTGATGAACCGCATCGAGCTGAAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACAGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGGAGACGGCAGCGTGCAGCTCGCCGACCACTACACCAACAGAACACCCCCATCAGCGACGGCCCGATACACTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCCTGAGCAAAGACCCCAACGAGGAAGCGCGATCCGCATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCCGTAGACCGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATAGTACGCCCCAATGGCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGGTATTGCATAATGCATCAGGCTGGTATATTTAGATCCCCGCTTTACCGCGGGCAATACTTTTTTTTTTTTTTTTTTTTTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAACACCAAAACTCGACGTATTTCCGAGGCGCAGTGCATAATACTACGCAGTGTTGCCAAATAATCACTATAGTAACCATTTATTCAGCGGACGCCAAACTCAATGTATTTCTGAGAGCATAGTGCATAAACTATACCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAATTTTGTTTTAACATTTC'

seqOdd2 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGGTGCCCATCCTGGTCGAGCTGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCTCGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCTGGACTACAGCTGAAGAAAGCACGACTTCTTTCAAGTCCGCCATGCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCGTATATACACCGCGCGAAGCTACGTCCAGGAGCGCCTTTCTTCAAGGACGACGGCAACTACAAGCATTCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGTATCGAGTTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGCGAACTTTAAGATCCGCCACAATATCGAGTGACGCAGCGTGCAGCCAAGCCGACCACTACCAGTACCCCTCATCGGCGACGGCCCCGTGCTGCTGCCCGGGACAACAGGTTCGCCTGGAGTACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCTCTGCTGAGTTCGTGACCGCTGCCGGGATTTCGGCATGGACGAGCTGTACAAGTAAGAATTCGACACGTTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGAACTGATGTGCATAATGCATCAGGCTGTTATTAGGATCTCGCTTACTGCGGGCAACATAGCAACACCAAAACTCGACGTATTTCTGAGGAGGCGTAGGTGCATAATGCTGCGCAGTGTTACAACAATCACTATATACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTTATAGCCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTGACCCAACAAAATTTGTTTTTAATGATTT'

print('0 vs. 8')
alignments = pairwise2.align.globalxx(seq0, seq08)
print(pairwise2.format_alignment(*alignments[0]))

print('0 vs. 10')
alignments = pairwise2.align.globalxx(seq0, seq10)
print(pairwise2.format_alignment(*alignments[0]))

print('0 vs. 14')
alignments = pairwise2.align.globalxx(seq0, seq14)
print(pairwise2.format_alignment(*alignments[0]))

print('0 vs. 67')
alignments = pairwise2.align.globalxx(seq0, seq67)
print(pairwise2.format_alignment(*alignments[0]))
#'''
'''
print('All of them!!')
binPath = 'test/first_benchmark/seq_bin0.fq'
records = [record for record in SeqIO.parse(binPath, "fastq")]
count = 0
als = []
for record in records:
    count += 1
    if count % 100 == 0: print(count)
    alignments = pairwise2.align.globalxx(seq0, str(record.seq))
    dst = distance(seq0, str(record.seq))
    als.append((dst, str(record.seq)))

als.sort()

for i in range(len(als)):
    print(i)
    print(als[i][0])
    alignments = pairwise2.align.globalxx(seq0, als[i][1])
    print(pairwise2.format_alignment(*alignments[0]))

print([x[0] for x in als])
'''
'''
consPath = 'test/first_benchmark/consensus.fasta'
seqs = [(int(record.id),str(record.seq)) for record in SeqIO.parse(consPath, "fasta")]
seqs.sort()
seqs = [x[1] for x in seqs]
temp = [x for x in cm.cluster_longread_consensus_sequences(seqs, dendrogramFile='test/first_benchmark/histogram.png')]
'''
cons0 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCTCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCATAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGGGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAATGATTT'
'''
cons10 = 'CAGCATAGTACATTTCCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATACTAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACATTTCAAAAAAAAAAAAAAAGGCGATCTGGCACGGAGGTATCAGTCGTCATCAGCAGTCCCACAGGTGCTGGAGTCTTGTGTCCCGGTTACCAGGTTGGCGCCAGCAGCATCAACCCAAAAAAATCGGGCGCGCTTCGTTCCAGTTGCACGTATTGCTAGGTTAACACGGTAACTGGGAGGACCTGAGCTCAGCACACCTGTGTGGCTCTTCGGATCGGTGGTGCATGCCACACATCTCTACGGTGGTCCTAAATAGTCAGCATAGTACATTTCATCTGACTAATACCACAACGCACACCGGCGCGCATGATGGAGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCATCCCTGGTCGAGCTGGACGGCGACGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGAGCGATGCCACCTACGGCGGCTGTTCCTGAGTTCGTGCTGCCGGCGGCTGGCGTGCCCTGGCCTTTCCCTCGGCTGACCACCTGACCTACGGCGTGCGGTCGCTGGCCTTCCCCGGCCACGCCAGAGGAGCGCGCGGCTTCTTCAAGTGCGCCATGCCAGAAGGCGCGACCGGGAGCGCACCATCTTCTTCAAGGACGACGGCGCTGGACCCGCGAGTGAAGTTGGGGGCGGCGCACATCAACGTCAGAGCTGAAGGGCATCGGCCAAGGAGGACATCCTGGGGCACAACTGGAGTACAGCACGACGCGGCCGCGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGCGCAGCTCGCCCGACCACTACCAACAGAACACCCCATCGGCGACGGCTACGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCTGAGCAAAGACCCCAACGAGAAGCGATCCATGGTCCTGCTGGAGTTGTGACCCGCCGCCGGGATCACTCGGCAGCGGACGACTGGCCGCAAGTAAGAATTCGATATCAGAAAGCATCGATACTAGTGCGCTTGTGACGCTTTGAAAAAAGAAAGCGCGACTGGCGAGCTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCGCTTACAGGAACGTGTAGCGCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGTTGCCAAATAATCACTATATTGTAACATTTATTCAGCGGACGCCAAAACTCAATGTATGTATTTCTGAGAGCAGCATGGTATAATACCGTAGCGTCTGCGCAACTTTTATTATTTTCTTTATTAATCAACAAAATTTTGTTTTAACATT'
cons18 = 'CAGCGCCGTACGCATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATACTAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGGACGTATTTCCGAGGGGGCGCAGTGCATAATGCTGCGGGGTGTTGCCAAAAAACCACTTTATAAACCTTTTTTTGGGGGGCCCCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACATTTCAAAAAAAAAAAAGGGTAGAACAAACCGCACATCCAGTCATCGGCAGTCCCACCTGGTGCACAGGTCTTGTGTCCCAGTTACCAGGTTAACCTTGGCAATACGTGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATCGGTGTACTTCGTTCAGTTGCGACGGCTTGCTAAGGTTAACCTGGTAACTGGGACACAAGACTCCAGCACCTGAGTGTAGCTCTTCCGGATTGCTGGCACGGGTGTTCATCTCTACAGTGGTCCACCAGCGGATCAGCATAGTACATTTCATCCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGGCTGTTCACCGGGGTGGTGCCACATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGGGGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCCCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCGGCGCTTCTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAGCTACAGGGCCCGCGCCGAGGTGAAGTTCGAGGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAAGGAGGACGGCAACATCCATGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCCAAGCTTATCGATACTAGATACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAACAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACATTT'
cons22 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTCACCACAGCAGAACACCCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATACTAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACATTTCAAAAAAAAAAAAAAGTACCGGAATATTCATCAGTCGTCATCAGCAGTCCCACAGGTGCTGGAGTCTTGTGTCCCAGTTACCAGGTTAACTCCTTTGAGTGTGGCTCTCGGATGGGCCAGCAGCCTACTCATCTCTGGCTGTGGTCCTGTGCCAGTCAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGGAGCGCACCATCTCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACCTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATACTAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGTGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACATTTCAAAAA'
cons41 = 'TAAGCATAGGCACATTTCATCTGACTAATACCACAACACCAGCGGCCGCATGATGAGCAAGGGCGAGCTGTTCACCCGGGGTGGTGCCCATCCTGGTCGAGGCTGGACGGCGACGTAAGCAGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGCAACCACACCTACGGCAAGCTGGTGGTGTTGTGGTAGTAAGTCGGATGGAAATGGCCTTATGCTGACTGTTAGGACCACCGTAGAATAGCTCTTCGGATTACTGCTTTGGACCACGTATCTCTACGGTGGTCCTAAATAGTCAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGATTGAGAAGCAAGGGCGAGGAGCTGTTCACCGGGGGTGGGTGCCCATCCTGGTCGAGGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAGAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGAGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCGACAAGCTGGGGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACCCCTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAGAATTCGATATCAAGCTTATCGATACTGAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGAACGGCAATATAACAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCTCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTTATTAATCAACAAAATTTTGTTTTTAACATTT'

print(len(cons0))
print(len(cons10))
print(len(cons18))
print(len(cons22))
print(len(cons41))
print('0 vs. 41')
alignments = pairwise2.align.globalxx(cons0, cons41)
print(pairwise2.format_alignment(*alignments[0]))
'''
'''
# Knocking off the bottom 20%
file = 'test/data/first_benchmark/seq_bin0.fq'
scores = []
records = []
with open(file) as handle:
    for record in SeqIO.parse(handle, "fastq"):
        scores.append(distance(cons0, str(record.seq)))
        records.append(record)

sorted_y_idx_list = sorted(range(len(scores)),key=lambda x:scores[x])
records = [records[i] for i in sorted_y_idx_list ]
records = records[:(len(records)//5)*4]

with open('test/data/top_80/top_80_bin0.fq', "w") as centerFile:
    SeqIO.write(records, centerFile, "fastq")
#'''
cons0 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCTCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCATAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGGGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAATGATTT'

cons0_2 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATTATCGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCGTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAATATTT'

cons0_3 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACCGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTAACATTT'

cons1500 = 'CAGCATAGTACATTTCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACACAACCGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAATGTATTTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTAATCAACAAAATTTTGTTTTTTAACATTT'

#file = 'test/data/top_80/seq_bin0.fq'
#with open(file) as handle:
#    records = [record for record in SeqIO.parse(handle, "fastq")]

#with open('test/data/top_80/seq_bin0_3.fq', "w") as centerFile: SeqIO.write(records, centerFile, "fastq")


#import filecmp
#print(filecmp.cmp('test/data/top_80/seq_bin0.fq', 'test/data/first_benchmark/seq_bin0.fq', shallow=False))
#seq1 = p.run_medaka_on_file('test/data/first_benchmark/', 'test/data/first_benchmark/seq_bin0.fq')
#seq1 = p.run_medaka_on_file('test/data/top_80/', 'test/data/top_80/seq_bin0.fq')
#seq2 = p.run_medaka_on_file('test/data/top_80/', 'test/data/top_80/seq_bin0_3.fq')
#seq2 = p.run_medaka_on_file('test/data/top_80/', 'test/data/top_80/temp_bin.fq')
#print(seq2)


#alignments = pairwise2.align.globalxx(seq1, seq2)
#print(pairwise2.format_alignment(*alignments[0]))

#df = p.benchmark_binned_sequences('test/data/top_80/', 'test/data/top_80/top_80_bin0.fq')
#df1, df2 = p.benchmark_binned_sequences('test/data/top_80/', 'test/data/top_80/seq_bin0.fq')
#df1, df2 = p.benchmark_binned_sequences('test/data/top_80/', 'test/data/top_80/top_80_bin0.fq')
#df = p.benchmark_binned_sequences('test/data/top_80/', 'test/data/first_benchmark/seq_bin0.fq')
#df.to_csv('test/data/top_80/benchmark_original.csv', index=False)
#df.to_csv('test/data/top_80/benchmark.csv', index=False)
#df1.to_csv('test/data/top_80/benchmark_test_top80.csv', index=False)
#df2.to_csv('test/data/top_80/benchmark_test_sequences_top80.csv', index=False)


#p.make_draft_file('test/data/sup_original_compare/seq_bin_combined_originalFirst.fq', 'test/data/sup_original_compare/seq_bin_combined_originalFirst_draft.fq')
#df1, df2 = p.benchmark_binned_sequences('test/data/sup_original_compare/', 'test/data/sup_original_compare/seq_bin_sup.fq', iteration = 100)
#df1.to_csv('test/data/benchmark_sup_real.csv')

seq1 = 'CAGCAGGCAAGAGCCTGCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCTGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATACTAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAATATAATTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTCACCAACAACCTTTTTGTTTTTAACATTTCAAA'
seq2 = 'CAGCAGGCAAGAGCCTGCATCTGACTAATACCACAACACCACCAGCGGCCGCATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATTTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCTGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGAATTCGATATCAAGCTTATCGATACTAGTACGCCCCAATGACCCGACCAGCAAAACTCGATGTACTTCCGAGGAACTGATGTGCATAATGCATCAGGCTGGTATATTAGATCCCCGCTTACCGCGGGCAATATAGCAACACCAAAACTCGACGTATTTCCGAGGAGGCGCAGTGCATAATGCTGCGCAGTGTTGCCAAATAATCACTATATTAACCATTTATTCAGCGGACGCCAAAACTCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAATATAATTCTGAGGAAGCATGGTGCATAATGCCATGCAGCGTCTGCATAACTTTTTATTATTTCTTTTATTCACCAACAACCTTTTTGTTTTTAACATTTCAAA'
alignments = pairwise2.align.globalxx(seq1, seq2)
print(pairwise2.format_alignment(*alignments[0]))
