from cutadapt.parser import AdapterParser
from cutadapt.modifiers import PairedAdapterCutter, ModificationInfo
from typing import Sequence

parser = AdapterParser(
        max_errors=0.2, min_overlap=4, read_wildcards=False,
        adapter_wildcards=False, indels=False)

FW1 = 'CAAGCAGAAGACGGCATACGAGAT'
FW2 = 'AGRGTTYGATYMTGGCTCAG'
RV1 = 'AATGATACGGCGACCACCGAGATC'
RV2 = 'CGACATCGAGGTGCCAAAC'
FW1R = 'ATCTCGTATGCCGTCTTCTGCTTG'
FW2R = 'CTGAGCCAKRATCRAACYCT'
RV1R = 'GATCTCGGTGGTCGCCGTATCATT'
RV2R = 'GTTTGGCACCTCGATGTCG'

f1 = FW1 + '...' + FW2
f2 = RV1 + '...' + RV2
b1 = FW2R + '...' + FW1R
b2 = RV2R + '...' + RV1R

ads = [('front',f1), ('front',f2), ('back',b1), ('back',b2)]

adapters = parser.parse_multi(ads)

cutter = PairedAdapterCutter(adapters[:2], adapters[2:], 'trim')

testLine = 'GGCATACGAGATATATGTACTATTGTATGCAGGGTTTGATCCTGGCTCAGGATGAACGCTGGCGGCGTGCCTAATACATGCAAGTCGAGCGAACGGACGAGAAGGCTTCTCTGATATTGGCGGCGGACGGGTGGTAACACGTGGATAACCTACCTATAAGACTGGGATAACTTCGGAAACCGGAGCTAATACCGGATAATATTTTGAACCGCATGGTTCAAAAGTGAAGAGCAATCTTGCTGTCCTTATAGATGAGTCCGCGCTGCATTAGCTAGTTGGTAAGGTAACGGCTTGCAAGGCAACGTGCATAGCCGACCTGAGAGGGTGATCGGCCACACTGGAACTGAGACACGGTCCAGACTCCTACGGGAGGCAGCAGTAGGGAATCTTCCGCAATGGGCGAAAGCCTGACGGAGCAACGCCGCGTGAGTGATGAAGGTCTTCCGGATCGTAAAACTCTGTTATTAGGGAAGAACATATGTGTAGTAACTTTGTGCACATCTTGACGGTACCTAATCAGAAAGCCACGGCTAACTACGTGCCAGCAGCAACGGTAATACGTAGGTGGCTTAAGCGTTATCCGGAATTAGTGTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAGAAAGCCCGGCTCAAAGCCGTGGAGGGTCATTGGAAACTGGAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGGAAATGCTGCAAGTGTGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACGGGATTAGATACCCTGGTAGTCCACGCCGTAAACGATGAGTGCTAAGTGTTAGGGGTTTCCGCCCCTTAGTGCTGCAGCTAACGCATTAAGCACTCCGCCTGGGGAGTACGACCTGAGTTGAAACTCAAAGGTGACAGGACCCGCACAAGCGGTGGAGCATGGTTTAATTCGAAGCAACGCGAAGAACCTTACCAAATCTTGACATCCTTTGACAACTCTAGAGATGAGCTTTCCCCTTCGGGGGACAAAGTGACAGGTGGTGCATGGTTGTCGTCAGCTCGGTGTCGTGAGATGTTGGGTTAAGTCGCAACGAAGCGCAACCCTTAAGCTTAGTTGCCATCATTAAGTTGGGCACTCTAAGTTGACTGCCGGTAGCAAACCGGAGGAAGGTGGGGATGACGTCAAATCATCATGCCCCTTATGATTTGGAGCCACACACGTGCTACAATGGACAATACAAGGGCAGCGAAACCGCGAGGAACGAACAAATCCCATAAAGTTGTTCTCAGTTCGGATTGTGATCTGCAACTCGACTACATGAAGCTGGAATCGCTAGTAATCGTAGATCAGCATGCTACGGTGAATACGTTCCCGGGTCTTGTACACACCGCCCGTCACCACGAGTTTGTAACACCCGAAGCCGGTGGAGTAACCTTTTAGGGAGCTAGCCGTCGAAGGTGGGACAAATGATTGGGGTGAAGTCGTAACTAAGGTAGCCGTATCGGAAGGTGCGGCTGGATCACCTCCTTTCTAAGGATATATTCGGAACATCTTCTTCAGAAGATGCGGAATAACATGACATATTGTATTCAGTTTGAATGTTTATTTAACATTCAAATATTTTTTAGTTAAAGTGATATTGCTTATGCGAGCGCTTGACAATCTATTCTTTTAAAAGAAAGCGGTTGTCAGACAATGCATTAAGAAAAATTAAGCGGAGTTTACTTTTGTAAATGAGCATTTGATTTTTTTTGAAAATAAAGCAGTATGCGAGCGCTTGACTAAAAAAGAAATTGTACATTGAAAACTAGATAAGTAAGTAAAATATAGATTTTACCAAGCAAAACCGAGTGAATAAAGAGTTTTAAATAAGCTTGAATTCATAAGAAATAATCGCTAGTGTTCGAAAGAACATAAGATTAATAACGCGTTTCCTGTAGGATGGAAACATAGATTAAGTTATTAAGGGCGCACGGTGGATGCTTGGCACTAGAAGCCGATGAAGGACGTTACTAACGACGATATGCTTTGGGGAGCTGTAAGTAGCTTTGATCCAGAGATTTCCGAATGGAAACCCAGCATGAGTTATGTCGTAATTATCGATATGTGAATACATAGCATATCCAGAAGGCACACCCGGAGAACTGAAACATCTTAGTACCCGGAGGAAGAGAAAGAAAATTCGATTCCCTTAGTAGCGGCGAGCGAAACGGGAAGAGCCCAAACCAACAAGCTTGCTTGTTGGGGTTATGAGACACTCTATACGGAGTTACAAAGGACGACATTAAGACGAATCATCTGGAAAGATGAATCAAAGGAGTAATAATCCTGTAGTGAAAATGTTTGTCTCTCTTGAGTGGATCCTGAGTACGACGGAGCACGTGAAATTCCGTCGGAATCTGGGAGGACCATCTCCTAAGCTAAATACTCTCTAGTGACCGATAGTGAACCAGTACCGTGAGGAAAGGTGAAAAGCACCCCGGGGGAGTGAAATAGAACCTGAAACCGTGTGCTTACAAGTAGTCAGAACCCGTTAATGGGTGATGGCGTGCCTTTGTAGAATGAACCGGCGAGTTACGATTTGATGCAAGGTTAAGCAGTAAATGTGGAGCCGGCAGCGAAAGCGAGTCTGAATAGGGCGTTTAGTATTTGGTCGTAGACCCGAAACCAGTGATCTACCCTTGGTCAGGTTGAAGTTCAGGTAACACTGAATGGAGGACCGAACCGACTTACGTTGAAAAGTGAGCGGATGAACTGAGGGTAGCGGAGAAATTCAATCGAACCTGGAGATAGCTGGTTCTGCTCTCAAAATAGCTTTAGGGCTAGCCTCCAAGTGATGATTATTGGAGGTAGAGCACTGTTTGGACGAGGGCCCTCTCGGGTTTACCGAATTCAGACAAACTCCGAATGCCAATTAATTTAACTTGGGAGTCAAGAACATGGGTGATAAGATCCGTGTTCGAAGGGAGCAATACCAGACCACCAGCCCCTAGAGTCCCAAAATATGTTAAGTGGGGAAAAGGATGTGGCGTTGCCCAGACAACTAGGATGTTGGCTTAGAAGCAGCCATCATTTAAAGGAAGTGCGTAGCTCACTAGTCGAGTGACACTGCCGAAAATGTACCGGGGCTAAACATATTACGCAGAAGCTGTGGATTGTCCTTTGGACAATGGTAGGAGAGCGTTCTAAGGGCGTTGAAGCATGATCGTAAGGACATGTGGAGCGCTGAAGTGAGAATGCGCCGGTGTGGTAGCGAAAGACGGGTGAGAATCCCGTCCACCGATTGACTAAGGTTTCCAGAGGAAGGCTCGTCCGCTCCTGGGTTAGTCGGGTCTAAGCTAAAGACAATAGCCGACAGGCACGTAGGCGATGGATAACAGGTTGATATTCCTGTACCACCTATAATCGTTTTAATCGATGGGGGACGCAGTAGGATAGGCGAGAAGCGTGCGATTGGATTGCACGTCTGAAGCAGTAAGGCTGAGTATTAGGCAAATCCGGTACTCGTTAAGGCTGAGCTGTGATGGGGAAGACATTGTGTCTTCGAGTCGTTTGATTTCACACTACCGAAAATACTCTAGATAGAAAATAGGTGCCCGTACCGCAAACCGACACAGGTAGTCAAGATGAGAATTCTAAGGTGAGCGAGCGAACTCTCGTTAAGGAACTCGGCAAAATGACCCCGTAACTTCGGGAGAAGGGGTGCTCTTTAGGGTTAACGCCCAGAAGAGCCGCAGTGAATAGGCAAGCGACTGTTTATCAAAACACGGGTCTCTGCTAAACCGTATGATGTATAGGGGCTGACGCCTGCCCGGTGCTGGAAGGTTAAGAGGAGTGGTTGCTTCTGCAAGCTACGAATCGAAAGCCCCAGTAAACGGCGGCCGTAACTATAACGGTCCTAAGGTAGCGAAATTCCTTGTCGGGTAAGTTCCGACCCGCACGAAAGGCGTAACGATTTGGGCACTGTCTCAACGAGAGACTCCGGTGAAATCATAGTACCTGTGAAGATGCAGGTTACCGCGACAGGACGGAAAAGACCCGTGGAGCTTTACTGTAGCCTGATATTGAAATTCGGCACAGCAGGATAGGTAGAGACCTTTGAAACGTGAGCGCTAGCTTACGTGGAGGCGCTGGTGGGATACTACCTAGCTGTATTTGGCTTTCTAACCCGCACCACTTATCGTGGTGGGAGACAGTGTCAGGCGGGCAGTTTGACTGGGGCGGTCGCCTCCCTAAAGGTAACGGAGGCGCTCAAAGGTTCCCTCAGAATGGTTGGAAATCATTCATAGAGTGTAAGGCATAAGGGAGCTTGACTGCAGAGACCTACAAGTCGAGCAGGGTCGAAAAAGACGGACTTAGTGATCCGGTGGTTTCCGCATGGAAGGGCCATCGCTCAGCGGATAAAAGCTACCCCGGGGATAACAGGCTTATCTCCCCCAAGAGTTCACATCGACGGGGGTTTGGCACCTCGATGTCGCAATGTGTCGGCATAGGGGATCTCGGTGGT'

read1 = Sequence(testLine[:200])
read2 = Sequence(testLine[-200:])
info1 = ModificationInfo(read1)
info2 = ModificationInfo(read2)

r = cutter(read1, read2, info1, info2)

print(match)
print('done')
